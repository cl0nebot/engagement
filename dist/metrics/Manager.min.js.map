{"version":3,"sources":["metrics/Manager.min.js","metrics/Manager.js"],"names":["_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","exports","value","Manager","this","operative","something","doStuff"],"mappings":"AAAA,YAMA,SAASA,iBAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAJhHC,OAAOC,eAAeC,QAAS,cAC3BC,OAAO,GAKX,ICRMC,SAEJ,QAAAA,KAAcR,gBAAAS,KAAAD,GACZE,WACIC,UAAW,IACXC,QAAS,WACLH,KAAKE,WAAa,ODa9BL,SAAAA,WCNeE","file":"metrics/Manager.min.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Manager = function Manager() {\n    _classCallCheck(this, Manager);\n\n    operative({\n        something: 123,\n        doStuff: function doStuff() {\n            this.something += 456;\n        }\n    });\n};\n\nexports.default = Manager;","class Manager {\n\n  constructor() {\n    operative({\n        something: 123,\n        doStuff: function() {\n            this.something += 456;\n        }\n    });\n  }\n\n}\n\nexport default Manager;\n"],"sourceRoot":"/source/"}